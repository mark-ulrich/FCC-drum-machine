{"version":3,"sources":["components/Header.js","components/Pads.js","components/Display.js","components/VolumeControls.js","components/Power.js","BeatMachineApp.js","index.js"],"names":["Header","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","Component","Pads","_this","pads","props","bank","padPowerClass","isPoweredOn","map","pad","concat","id","onClick","playSound","src","clip","Display","text","displayText","VolumeControls","_this$props$volumeMet","volumeMethods","volumeUp","volumeDown","volumeMute","Power","togglePower","DefaultDisplayText","DefaultMutedText","DefaultVolume","ResetDisplayTimeout","BeatMachineApp","call","componentDidMount","document","addEventListener","e","toUpperCase","elem","indexOf","keys","keyMap","poweredOn","state","setState","isMuted","volume","getElementById","play","clipName","filter","setDisplayText","displayTimeout","window","clearTimeout","setTimeout","setVolume","setVolumeUp","Math","min","setVolumeDown","max","toggleMute","P","<",">","M","onKeyPress","components_Header","components_Pads","components_Display","components_VolumeControls","components_Power","ReactDOM","render","src_BeatMachineApp"],"mappings":"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","file":"static/js/main.43bc0a42.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport class Header extends Component {\n  render() {\n    return (\n      <div className='app-header'>\n        <h1>BeatMachine</h1>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Pads extends Component {\n  render() {\n    const pads = this.props.bank;\n    const padPowerClass = this.props.isPoweredOn\n      ? 'padPoweredOn'\n      : 'padPoweredOff';\n    return (\n      <div className='pads-container'>\n        {pads.map(pad => (\n          <div\n            className={`drum-pad pad ${padPowerClass}`}\n            key={pad.id}\n            id={pad.id}\n            onClick={() => this.props.playSound(pad.key)}\n          >\n            <audio src={pad.clip} className='clip' id={pad.key} />\n            {pad.key}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nPads.propTypes = {\n  bank: PropTypes.array.isRequired,\n  playSound: PropTypes.func.isRequired,\n  isPoweredOn: PropTypes.bool.isRequired\n};\n\nexport default Pads;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Display extends Component {\n  render() {\n    const text = this.props.isPoweredOn ? this.props.displayText : '';\n    return <div id='display'>{text}</div>;\n  }\n}\n\nDisplay.propTypes = {\n  displayText: PropTypes.string.isRequired,\n  isPoweredOn: PropTypes.bool.isRequired\n};\n\nexport default Display;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class VolumeControls extends Component {\n  render() {\n    const padPowerClass = this.props.isPoweredOn\n      ? 'padPoweredOn'\n      : 'padPoweredOff';\n    const { volumeUp, volumeDown, volumeMute } = this.props.volumeMethods;\n    return (\n      <div className='volume-controls'>\n        <i\n          id='volume-mute'\n          className={`fas fa-volume-mute fa-2x pad ${padPowerClass}`}\n          onClick={volumeMute}\n        />\n        <i\n          id='volume-down'\n          className={`fas fa-volume-down fa-2x pad ${padPowerClass}`}\n          onClick={volumeDown}\n        />\n        <i\n          id='volume-up'\n          className={`fas fa-volume-up fa-2x pad ${padPowerClass}`}\n          onClick={volumeUp}\n        />\n      </div>\n    );\n  }\n}\n\nVolumeControls.propTypes = {\n  volumeMethods: PropTypes.object.isRequired\n};\n\nexport default VolumeControls;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Power extends Component {\n  render() {\n    const padPowerClass = this.props.isPoweredOn\n      ? 'padPoweredOn'\n      : 'padPoweredOff';\n    return (\n      <div className={`power-button pad ${padPowerClass}`}>\n        <i\n          className='fas fa-power-off fa-3x'\n          onClick={this.props.togglePower}\n          id='power-button'\n        />\n      </div>\n    );\n  }\n}\n\nPower.propTypes = {\n  togglePower: PropTypes.func.isRequired\n};\n\nexport default Power;\n","import React, { Component } from 'react';\n\nimport Header from './components/Header';\nimport Pads from './components/Pads';\nimport Display from './components/Display';\nimport VolumeControls from './components/VolumeControls';\nimport Power from './components/Power';\n\nconst DefaultDisplayText = 'BeatMachine';\nconst DefaultMutedText = 'MUTED';\nconst DefaultVolume = 10;\n\nconst ResetDisplayTimeout = 2500;\n\nexport class BeatMachineApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.displayTimeout = null;\n\n    this.keyMap = {\n      P: this.togglePower,\n      '<': this.setVolumeDown,\n      '>': this.setVolumeUp,\n      M: this.toggleMute\n    };\n\n    this.bank = [\n      {\n        id: 'Heater 1',\n        clip: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3',\n        key: 'Q'\n      },\n      {\n        id: 'Heater 2',\n        clip: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3',\n        key: 'W'\n      },\n      {\n        id: 'Heater 3',\n        clip: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3',\n        key: 'E'\n      },\n      {\n        id: 'Heater 4',\n        clip: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3',\n        key: 'A'\n      },\n      {\n        id: 'Clap',\n        clip: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3',\n        key: 'S'\n      },\n      {\n        id: 'Open Hat',\n        clip: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3',\n        key: 'D'\n      },\n      {\n        id: 'Kick & Hat',\n        clip: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3',\n        key: 'Z'\n      },\n      {\n        id: 'Kick',\n        clip: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3',\n        key: 'X'\n      },\n      {\n        id: 'Closed Hat',\n        clip: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3',\n        key: 'C'\n      }\n    ];\n\n    this.state = {\n      poweredOn: true,\n      displayText: DefaultDisplayText,\n      volume: DefaultVolume,\n      isMuted: false\n    };\n  }\n\n  componentDidMount = () => {\n    // Handle KeyPress Events\n    document.addEventListener('keypress', e => {\n      // Pads\n      const id = e.key.toUpperCase();\n      const keys = this.bank.map(elem => elem.key);\n      if (keys.indexOf(id) >= 0) this.playSound(id);\n      // Other hotkeys\n      else if (Object.keys(this.keyMap).indexOf(id) >= 0) {\n        this.keyMap[id]();\n      }\n    });\n  };\n\n  // Toggle power on/off\n  togglePower = () => {\n    const poweredOn = this.state.poweredOn ? false : true;\n    this.setState({\n      poweredOn,\n      displayText: DefaultDisplayText,\n      isMuted: false,\n      volume: DefaultVolume\n    });\n  };\n\n  // Play sound from associated HTML <audio> element\n  playSound = key => {\n    if (!this.state.poweredOn || this.state.isMuted) return;\n\n    // Set correct volume and play clip\n    const clip = document.getElementById(key);\n    clip.volume = this.state.volume / 100;\n    clip.play();\n\n    // Update display with clip name\n    const clipName = this.bank\n      .filter(clip => clip.key === key)\n      .map(clip => clip.id)[0];\n    this.setDisplayText(clipName);\n  };\n\n  // Set the display text. Will revert to either 'MUTED' or default state after\n  //  a given timeout.\n  setDisplayText = displayText => {\n    this.setState({ displayText });\n\n    // If timeout is active, clear it first\n    if (this.displayTimeout) window.clearTimeout(this.displayTimeout);\n    this.displayTimeout = setTimeout(\n      () =>\n        this.setState({\n          displayText:\n            displayText === DefaultMutedText || this.isMuted\n              ? DefaultMutedText\n              : DefaultDisplayText\n        }),\n      ResetDisplayTimeout\n    );\n  };\n\n  setVolume = volume => {\n    this.setState({\n      volume\n    });\n    this.setDisplayText(`Volume: ${volume}`);\n  };\n\n  setVolumeUp = () => {\n    const volume = Math.min(this.state.volume + 1, 10);\n    this.setVolume(volume);\n  };\n\n  setVolumeDown = () => {\n    const volume = Math.max(this.state.volume - 1, 0);\n    this.setVolume(volume);\n  };\n\n  toggleMute = () => {\n    if (!this.state.poweredOn) return;\n\n    const isMuted = this.state.isMuted ? false : true;\n    // console.log('Setting isMuted: ', isMuted);\n    this.setState({\n      isMuted\n    });\n    if (isMuted) this.setDisplayText(DefaultMutedText);\n    else this.setDisplayText(`Volume: ${this.state.volume}`);\n  };\n\n  // Pack the volume control methods for easier transfer as property\n  volumeMethods = {\n    volumeUp: this.setVolumeUp,\n    volumeDown: this.setVolumeDown,\n    volumeMute: this.toggleMute\n  };\n\n  render() {\n    return (\n      <div id='drum-machine' onKeyPress={this.onKeyPress}>\n        <Header />\n        <Pads\n          bank={this.bank}\n          playSound={this.playSound}\n          isPoweredOn={this.state.poweredOn}\n        />\n        <div className='controls'>\n          <Display\n            displayText={this.state.displayText}\n            isPoweredOn={this.state.poweredOn}\n          />\n          <VolumeControls\n            volumeMethods={this.volumeMethods}\n            isPoweredOn={this.state.poweredOn}\n          />\n          <Power\n            togglePower={this.togglePower}\n            isPoweredOn={this.state.poweredOn}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BeatMachineApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport BeatMachineApp from './BeatMachineApp';\n\nimport './css/index.css';\n\nReactDOM.render(<BeatMachineApp />, document.getElementById('root'));\n"],"sourceRoot":""}